#!/usr/bin/env node

/**
 * TESTE DO FLUXO CORRETO DE TRIAL
 * R$1,00 imediato ‚Üí 3 dias ‚Üí R$29,90/m√™s autom√°tico
 * 
 * Verifica se os componentes Stripe est√£o sendo criados corretamente:
 * ‚úÖ Invoice Item de R$1,00 criado ANTES da assinatura
 * ‚úÖ Customer criado com default_payment_method associado
 * ‚úÖ Subscription com trial_period_days: 3
 * ‚úÖ setup_future_usage: "off_session"
 * ‚úÖ R$29,90 configurado como recorrente mensal
 */

import fetch from 'node-fetch';

const API_BASE = 'http://localhost:5000';

async function testCorrectTrialFlow() {
  console.log('üöÄ TESTANDO FLUXO CORRETO DE TRIAL...\n');
  console.log('üìã Verificando implementa√ß√£o conforme solicitado:');
  console.log('   ‚úÖ Invoice Item de R$1,00 ANTES da assinatura');
  console.log('   ‚úÖ Customer com default_payment_method');
  console.log('   ‚úÖ Subscription com trial_period_days: 3');
  console.log('   ‚úÖ setup_future_usage: "off_session"');
  console.log('   ‚úÖ R$29,90 recorrente mensal');
  console.log();

  try {
    // 1. LOGIN
    console.log('1. Fazendo login...');
    const loginResponse = await fetch(`${API_BASE}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'admin@admin.com',
        password: 'admin123'
      })
    });

    if (!loginResponse.ok) {
      console.log('‚ùå Falha no login');
      return;
    }

    const { accessToken } = await loginResponse.json();
    console.log('‚úÖ Login realizado com sucesso');

    // 2. CRIAR TRIAL CORRETO
    console.log('\n2. Criando trial correto...');
    const trialResponse = await fetch(`${API_BASE}/api/stripe/create-correct-trial`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${accessToken}`
      },
      body: JSON.stringify({
        planName: 'Teste Trial Correto',
        trialAmount: 1.00, // R$1,00
        trialDays: 3, // 3 dias
        recurringAmount: 29.90, // R$29,90
        currency: 'BRL'
      })
    });

    if (trialResponse.ok) {
      const trialData = await trialResponse.json();
      console.log('‚úÖ Trial correto criado com sucesso!');
      console.log();
      
      // VALIDAR COMPONENTES CRIADOS
      console.log('üîç VALIDANDO COMPONENTES CRIADOS:');
      
      // Customer
      if (trialData.customerId) {
        console.log('‚úÖ Customer criado:', trialData.customerId);
      } else {
        console.log('‚ùå Customer n√£o criado');
      }
      
      // Invoice Item
      if (trialData.invoiceItemId) {
        console.log('‚úÖ Invoice Item R$1,00 criado:', trialData.invoiceItemId);
      } else {
        console.log('‚ùå Invoice Item n√£o criado');
      }
      
      // Subscription
      if (trialData.subscriptionId) {
        console.log('‚úÖ Subscription com trial criada:', trialData.subscriptionId);
      } else {
        console.log('‚ùå Subscription n√£o criada');
      }
      
      // Price
      if (trialData.priceId) {
        console.log('‚úÖ Price R$29,90/m√™s criado:', trialData.priceId);
      } else {
        console.log('‚ùå Price n√£o criado');
      }
      
      // Checkout Session
      if (trialData.checkoutSessionId) {
        console.log('‚úÖ Checkout Session criado:', trialData.checkoutSessionId);
      } else {
        console.log('‚ùå Checkout Session n√£o criado');
      }
      
      // Checkout URL
      if (trialData.checkoutUrl) {
        console.log('‚úÖ Checkout URL dispon√≠vel:', trialData.checkoutUrl.substring(0, 50) + '...');
      } else {
        console.log('‚ùå Checkout URL n√£o dispon√≠vel');
      }
      
      console.log();
      console.log('üìã EXPLICA√á√ÉO DO FLUXO:');
      console.log(trialData.explanation);
      
    } else {
      console.log('‚ùå Falha ao criar trial correto');
      const errorText = await trialResponse.text();
      console.log('Erro:', errorText);
    }

    console.log('\nüéâ Teste do fluxo correto conclu√≠do!');
    console.log('\nüìä RESUMO DA IMPLEMENTA√á√ÉO:');
    console.log('‚Ä¢ Invoice Item: Cobran√ßa imediata de R$1,00');
    console.log('‚Ä¢ Trial Period: 3 dias de acesso');
    console.log('‚Ä¢ Recurring Price: R$29,90/m√™s ap√≥s trial');
    console.log('‚Ä¢ Payment Method: Salvo automaticamente');
    console.log('‚Ä¢ Dashboard: Cobran√ßa R$1,00 aparece separada da assinatura');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
  }
}

testCorrectTrialFlow();