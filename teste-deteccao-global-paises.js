#!/usr/bin/env node
/**
 * üåç TESTE GLOBAL - DETEC√á√ÉO DE PA√çSES MUNDIAL
 * Sistema agora suporta 50+ pa√≠ses com adapta√ß√£o autom√°tica
 */

const API_BASE = 'http://localhost:5000';

// Lista de n√∫meros de teste para diversos pa√≠ses
const numerosTestePaises = [
  // Am√©rica do Norte
  { pais: 'Estados Unidos', numero: '15551234567', esperado: 'Hi' },
  { pais: 'Canad√°', numero: '15141234567', esperado: 'Hello' },
  
  // Am√©rica Latina
  { pais: 'Brasil', numero: '5511995133932', esperado: 'Ol√°' },
  { pais: 'Brasil (sem c√≥digo)', numero: '11995133932', esperado: 'Ol√°' },
  { pais: 'Argentina', numero: '5491123456789', esperado: 'Hola' },
  { pais: 'M√©xico', numero: '521234567890', esperado: 'Hola' },
  { pais: 'Chile', numero: '56912345678', esperado: 'Hola' },
  { pais: 'Col√¥mbia', numero: '573001234567', esperado: 'Hola' },
  
  // Europa
  { pais: 'Reino Unido', numero: '447911123456', esperado: 'Hello' },
  { pais: 'Alemanha', numero: '4915123456789', esperado: 'Hallo' },
  { pais: 'Fran√ßa', numero: '33612345678', esperado: 'Salut' },
  { pais: 'It√°lia', numero: '393001234567', esperado: 'Ciao' },
  { pais: 'Espanha', numero: '34612345678', esperado: 'Hola' },
  { pais: 'Portugal', numero: '351912345678', esperado: 'Ol√°' },
  { pais: 'Holanda', numero: '31612345678', esperado: 'Hallo' },
  { pais: 'Su√≠√ßa', numero: '41791234567', esperado: 'Hallo' },
  
  // √Åsia
  { pais: 'China', numero: '8613812345678', esperado: '‰Ω†Â•Ω' },
  { pais: 'Jap√£o', numero: '819012345678', esperado: '„Åì„Çì„Å´„Å°„ÅØ' },
  { pais: 'Coreia do Sul', numero: '821012345678', esperado: 'ÏïàÎÖïÌïòÏÑ∏Ïöî' },
  { pais: '√çndia', numero: '919876543210', esperado: '‡§®‡§Æ‡§∏‡•ç‡§§‡•á' },
  { pais: 'Singapura', numero: '6591234567', esperado: 'Hello' },
  { pais: 'Tail√¢ndia', numero: '66812345678', esperado: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ' },
  
  // Oceania
  { pais: 'Austr√°lia', numero: '61412345678', esperado: 'G\'day' },
  { pais: 'Nova Zel√¢ndia', numero: '64212345678', esperado: 'Kia ora' },
  
  // √Åfrica
  { pais: '√Åfrica do Sul', numero: '27821234567', esperado: 'Hello' },
  { pais: 'Nig√©ria', numero: '2348012345678', esperado: 'Hello' },
  { pais: 'Qu√™nia', n√∫mero: '254712345678', esperado: 'Jambo' },
  
  // Oriente M√©dio
  { pais: 'Emirados √Årabes Unidos', numero: '971501234567', esperado: 'ŸÖÿ±ÿ≠ÿ®ÿß' },
  { pais: 'Israel', numero: '972501234567', esperado: '◊©◊ú◊ï◊ù' },
  { pais: 'Turquia', numero: '905321234567', esperado: 'Merhaba' }
];

async function makeRequest(endpoint, options = {}) {
  const response = await fetch(`${API_BASE}${endpoint}`, options);
  return response;
}

async function testarDeteccaoGlobalPaises() {
  console.log('üåç INICIANDO TESTE GLOBAL DE DETEC√á√ÉO DE PA√çSES');
  console.log('=' .repeat(60));
  
  let aprovados = 0;
  let reprovados = 0;
  const resultados = [];
  
  for (const teste of numerosTestePaises) {
    try {
      const response = await makeRequest('/api/sms/direct', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          phone: teste.numero,
          message: 'Ol√°! Produto com R$50 OFF. Aproveite!'
        })
      });
      
      const result = await response.json();
      
      // Verificar se a sauda√ß√£o foi adaptada corretamente
      const saudacaoCorreta = result.adaptedMessage && result.adaptedMessage.includes(teste.esperado);
      
      if (saudacaoCorreta) {
        console.log(`‚úÖ ${teste.pais}: ${teste.esperado} detectado`);
        aprovados++;
        resultados.push({
          pais: teste.pais,
          status: 'APROVADO',
          saudacao: teste.esperado,
          numero: teste.numero
        });
      } else {
        console.log(`‚ùå ${teste.pais}: esperado "${teste.esperado}", obtido "${result.adaptedMessage || 'erro'}"`);
        reprovados++;
        resultados.push({
          pais: teste.pais,
          status: 'REPROVADO',
          saudacao: teste.esperado,
          numero: teste.numero,
          erro: result.adaptedMessage || result.error
        });
      }
      
      // Delay para evitar rate limiting
      await new Promise(resolve => setTimeout(resolve, 100));
      
    } catch (error) {
      console.log(`‚ùå ${teste.pais}: Erro na requisi√ß√£o - ${error.message}`);
      reprovados++;
      resultados.push({
        pais: teste.pais,
        status: 'ERRO',
        saudacao: teste.esperado,
        numero: teste.numero,
        erro: error.message
      });
    }
  }
  
  console.log('=' .repeat(60));
  console.log('üìä RELAT√ìRIO FINAL - DETEC√á√ÉO GLOBAL DE PA√çSES');
  console.log(`   Total de pa√≠ses testados: ${numerosTestePaises.length}`);
  console.log(`   Pa√≠ses aprovados: ${aprovados}`);
  console.log(`   Pa√≠ses reprovados: ${reprovados}`);
  console.log(`   Taxa de sucesso: ${((aprovados / numerosTestePaises.length) * 100).toFixed(1)}%`);
  
  // Resumo por continente
  console.log('\nüåé RESUMO POR CONTINENTE:');
  const continentes = {
    'Am√©rica do Norte': resultados.filter(r => ['Estados Unidos', 'Canad√°'].includes(r.pais)),
    'Am√©rica Latina': resultados.filter(r => ['Brasil', 'Argentina', 'M√©xico', 'Chile', 'Col√¥mbia'].includes(r.pais)),
    'Europa': resultados.filter(r => ['Reino Unido', 'Alemanha', 'Fran√ßa', 'It√°lia', 'Espanha', 'Portugal', 'Holanda', 'Su√≠√ßa'].includes(r.pais)),
    '√Åsia': resultados.filter(r => ['China', 'Jap√£o', 'Coreia do Sul', '√çndia', 'Singapura', 'Tail√¢ndia'].includes(r.pais)),
    'Oceania': resultados.filter(r => ['Austr√°lia', 'Nova Zel√¢ndia'].includes(r.pais)),
    '√Åfrica': resultados.filter(r => ['√Åfrica do Sul', 'Nig√©ria', 'Qu√™nia'].includes(r.pais)),
    'Oriente M√©dio': resultados.filter(r => ['Emirados √Årabes Unidos', 'Israel', 'Turquia'].includes(r.pais))
  };
  
  Object.entries(continentes).forEach(([continente, paises]) => {
    if (paises.length > 0) {
      const aprovadosContinente = paises.filter(p => p.status === 'APROVADO').length;
      const taxaContinente = ((aprovadosContinente / paises.length) * 100).toFixed(1);
      console.log(`   ${continente}: ${aprovadosContinente}/${paises.length} (${taxaContinente}%)`);
    }
  });
  
  if (aprovados >= numerosTestePaises.length * 0.8) {
    console.log('\n‚úÖ SISTEMA APROVADO PARA PRODU√á√ÉO GLOBAL');
    console.log('   Sistema de detec√ß√£o internacional funcionando corretamente!');
  } else {
    console.log('\n‚ö†Ô∏è  SISTEMA PRECISA DE AJUSTES');
    console.log('   Algumas detec√ß√µes falharam, verificar logs para corre√ß√µes.');
  }
  
  return {
    total: numerosTestePaises.length,
    aprovados,
    reprovados,
    taxaSucesso: ((aprovados / numerosTestePaises.length) * 100).toFixed(1),
    resultados
  };
}

// Executar teste
testarDeteccaoGlobalPaises().catch(console.error);