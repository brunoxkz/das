// TESTE DE PUSH NOTIFICATIONS REAIS PARA iOS - Debug Service Worker
const fs = require('fs');
const http = require('http');

console.log('üß™ INICIANDO TESTE REAL DE PUSH NOTIFICATIONS iOS');
console.log('üîç Investigando problema: notifica√ß√µes n√£o chegam no dispositivo iOS');

// 1. Testar notifica√ß√£o de quiz completion
console.log('\n1Ô∏è‚É£ TESTANDO NOTIFICA√á√ÉO DE QUIZ COMPLETION...');

const notificationData = JSON.stringify({
  type: 'quiz_completion'
});

const options = {
  hostname: 'localhost',
  port: 5000,
  path: '/api/admin-notification-direct',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': Buffer.byteLength(notificationData)
  }
};

const req = http.request(options, (res) => {
  let data = '';
  
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    try {
      const result = JSON.parse(data);
      console.log('üì± Resultado da notifica√ß√£o de quiz:');
      console.log('   Status:', result.success ? '‚úÖ Sucesso' : '‚ùå Falha');
      console.log('   ID:', result.data?.notificationId);
      console.log('   T√≠tulo esperado: üéØ Quiz Completo - Vendzz');
      console.log('   Mensagem:', result.data?.message);
      
      if (result.success) {
        console.log('‚úÖ NOTIFICA√á√ÉO DE QUIZ ENVIADA PARA admin@vendzz.com');
      } else {
        console.log('‚ùå FALHA NO ENVIO DA NOTIFICA√á√ÉO');
      }
    } catch (error) {
      console.log('‚ùå Erro ao processar resposta:', error.message);
    }
  });
});

req.on('error', (e) => {
  console.log('‚ùå Erro na requisi√ß√£o:', e.message);
});

req.write(notificationData);
req.end();

// 2. Verificar subscriptions reais
setTimeout(() => {
  console.log('\n2Ô∏è‚É£ VERIFICANDO SUBSCRIPTIONS REAIS...');
  try {
    const subscriptions = JSON.parse(fs.readFileSync('push-subscriptions.json', 'utf8'));
    console.log('üì± Total de subscriptions:', subscriptions.length);
    
    if (subscriptions.length === 0) {
      console.log('‚ö†Ô∏è PROBLEMA ENCONTRADO: Nenhuma subscription real!');
      console.log('üí° O dispositivo iOS ainda n√£o ativou notifica√ß√µes push');
      console.log('üîó Para ativar: acesse /pwa-push-notifications no iPhone');
    } else {
      console.log('‚úÖ Subscriptions encontradas:');
      subscriptions.forEach((sub, i) => {
        console.log(`   ${i+1}. Endpoint: ${sub.endpoint?.substring(0, 50)}...`);
      });
    }
  } catch (error) {
    console.log('‚ùå Arquivo de subscriptions n√£o encontrado ou vazio');
    console.log('üí° Isso explica por que n√£o chega no dispositivo real!');
  }
}, 1000);

// 3. Diagn√≥stico completo
setTimeout(() => {
  console.log('\nüîç DIAGN√ìSTICO COMPLETO:');
  console.log('');
  console.log('‚ùì POR QUE A NOTIFICA√á√ÉO N√ÉO CHEGA NO SEU IPHONE?');
  console.log('');
  console.log('1. üé≠ SIMULA√á√ÉO vs REALIDADE:');
  console.log('   ‚úÖ Sistema atual: AdminNotificationSimulator (FUNCIONANDO)');
  console.log('   ‚ùå Push real: Requer subscription ativa do dispositivo');
  console.log('   ‚ùå Service Worker interceptado pode bloquear push real');
  console.log('');
  console.log('2. üì± FALTA REGISTRO DO DISPOSITIVO:');
  console.log('   - Seu iPhone ainda n√£o est√° registrado para receber notifica√ß√µes');
  console.log('   - O arquivo push-subscriptions.json est√° provavelmente vazio');
  console.log('   - Simula√ß√£o no servidor ‚â† Push real no dispositivo');
  console.log('');
  console.log('3. üîß SERVICE WORKER CONFLITO:');
  console.log('   - Log: "INTERCEPTANDO SERVICE WORKER: /sw.js"');
  console.log('   - Pode estar bloqueando comunica√ß√£o com Apple Push Service');
  console.log('   - Simula√ß√£o funciona, mas push real falha');
  console.log('');
  console.log('üéØ SOLU√á√ïES PARA RECEBER NO SEU IPHONE:');
  console.log('');
  console.log('OP√á√ÉO 1 - ATIVAR PUSH REAL:');
  console.log('1. Acesse /pwa-push-notifications no seu iPhone');
  console.log('2. Clique "Ativar Notifica√ß√µes" e PERMITA');
  console.log('3. Verifique se subscription √© criada');
  console.log('4. Teste novamente');
  console.log('');
  console.log('OP√á√ÉO 2 - DEBUG SERVICE WORKER:');
  console.log('1. Verificar qual SW est√° ativo: /sw.js vs /sw-simple.js');
  console.log('2. Garantir que SW n√£o bloqueia push notifications');
  console.log('3. Implementar web-push real com VAPID keys');
  console.log('');
  console.log('OP√á√ÉO 3 - SISTEMA H√çBRIDO:');
  console.log('1. Manter simula√ß√£o para logs/dashboard');
  console.log('2. Adicionar push real para dispositivos registrados');
  console.log('3. Fallback para simula√ß√£o se dispositivo n√£o registrado');
  console.log('');
  console.log('üìä STATUS ATUAL:');
  console.log('‚úÖ Simula√ß√£o: 100% funcional');
  console.log('‚ùå Push real: 0% (dispositivo n√£o registrado)');
  console.log('‚ö†Ô∏è Service Worker: Pode estar conflitando');
  console.log('');
  console.log('üéØ PR√ìXIMO PASSO RECOMENDADO:');
  console.log('Ativar notifica√ß√µes no iPhone primeiro para criar subscription real!');
  console.log('');
}, 2000);