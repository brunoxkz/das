#!/bin/bash

echo "üöÄ DEPLOY AUTOM√ÅTICO REPLIT ‚Üí RAILWAY"
echo "===================================="

# Verificar se est√° no Replit
if [ -z "$REPLIT_ENVIRONMENT" ]; then
    echo "‚ùå Este script deve ser executado no Replit"
    exit 1
fi

echo "‚úÖ Ambiente Replit detectado"

# Instalar Railway CLI no Replit
echo "üì¶ Instalando Railway CLI..."
npm install -g @railway/cli

# Verificar instala√ß√£o
if ! command -v railway &> /dev/null; then
    echo "‚ùå Erro ao instalar Railway CLI"
    exit 1
fi

echo "‚úÖ Railway CLI instalado com sucesso"

# Configurar token do Railway (ser√° fornecido pelo usu√°rio)
echo "üîê Para continuar, voc√™ precisa:"
echo "1. Ir para: https://railway.app/account/tokens"
echo "2. Criar um novo token"
echo "3. Copiar o token"
echo ""
echo "Cole seu token do Railway aqui:"
read -s RAILWAY_TOKEN

# Configurar token
export RAILWAY_TOKEN=$RAILWAY_TOKEN

# Testar conex√£o
echo "üîç Testando conex√£o com Railway..."
if ! railway whoami; then
    echo "‚ùå Token inv√°lido ou erro de conex√£o"
    exit 1
fi

echo "‚úÖ Conectado ao Railway com sucesso!"

# Criar projeto no Railway
echo "üìã Digite o nome do projeto (ex: vendzz-platform):"
read PROJECT_NAME

echo "üîß Criando projeto no Railway..."
railway new $PROJECT_NAME --template blank

# Configurar vari√°veis de ambiente
echo "üîß Configurando vari√°veis de ambiente..."

# Vari√°veis b√°sicas
railway variables set NODE_ENV=production
railway variables set PORT=3000

# Verificar se h√° arquivo .env local
if [ -f ".env" ]; then
    echo "üìã Arquivo .env encontrado, configurando vari√°veis..."
    
    # Ler vari√°veis importantes do .env
    while IFS='=' read -r key value; do
        if [[ $key == "STRIPE_SECRET_KEY" ]]; then
            railway variables set STRIPE_SECRET_KEY="$value"
            echo "‚úÖ STRIPE_SECRET_KEY configurado"
        elif [[ $key == "VITE_STRIPE_PUBLIC_KEY" ]]; then
            railway variables set VITE_STRIPE_PUBLIC_KEY="$value"
            echo "‚úÖ VITE_STRIPE_PUBLIC_KEY configurado"
        elif [[ $key == "OPENAI_API_KEY" ]]; then
            railway variables set OPENAI_API_KEY="$value"
            echo "‚úÖ OPENAI_API_KEY configurado"
        elif [[ $key == "DATABASE_URL" ]]; then
            # Para SQLite, usar path local no Railway
            railway variables set DATABASE_URL="file:./vendzz-database.db"
            echo "‚úÖ DATABASE_URL configurado"
        fi
    done < .env
fi

# Configurar banco PostgreSQL (opcional)
echo "üóÑÔ∏è Deseja usar PostgreSQL do Railway? (y/N):"
read USE_POSTGRES

if [[ $USE_POSTGRES =~ ^[Yy]$ ]]; then
    echo "üîß Adicionando PostgreSQL..."
    railway add postgresql
    echo "‚úÖ PostgreSQL adicionado"
fi

# Fazer deploy
echo "üöÄ Iniciando deploy..."
railway deploy

# Verificar status
echo "üìä Verificando status do deploy..."
railway status

# Obter URL do projeto
echo "üåê Obtendo URL do projeto..."
PROJECT_URL=$(railway domain)

echo ""
echo "‚úÖ DEPLOY CONCLU√çDO COM SUCESSO!"
echo "================================="
echo "üåê URL do projeto: $PROJECT_URL"
echo "üîë Login: admin@vendzz.com"
echo "üîê Senha: Btts4381!"
echo ""
echo "üìä Para monitorar:"
echo "railway logs --follow"
echo ""
echo "üîß Para acessar dashboard:"
echo "railway dashboard"